&НаСервере
Функция ПолучитьДанныеОРеализацияхЗаДатуЦеликом()
	
	МассивДляВыгрузки = Новый Массив;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДатаНачала", ДатаВыгрузки);
	Запрос.УстановитьПараметр("ДатаОкончания", КонецДня(ДатаВыгрузки));
	
	Запрос.Текст=
	"ВЫБРАТЬ
	|    РеализацияТоваровИУслуг.Сотрудник.Представление КАК СотрудникПредставление,
	|    РеализацияТоваровИУслуг.СуммаДокумента КАК СуммаДокумента,
	|    РеализацияТоваровИУслуг.ПризнакОплаты КАК ПризнакОплаты,
	|    РеализацияТоваровИУслуг.Дата КАК Дата
	|ИЗ
	|    Документ.РеализацияТоваровИУслуг КАК РеализацияТоваровИУслуг
	|ГДЕ
	|    РеализацияТоваровИУслуг.Проведен
	|    И РеализацияТоваровИУслуг.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
	|
	|УПОРЯДОЧИТЬ ПО
	|    Дата";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		МассивСтроки =  Новый Массив;
		
		МассивСтроки.Добавить(Выборка.СотрудникПредставление);
		МассивСтроки.Добавить(Выборка.СуммаДокумента);
		МассивСтроки.Добавить(Выборка.ПризнакОплаты);
		МассивСтроки.Добавить(Выборка.Дата);
		ДанныеСтроки = СтрСоединить(МассивСтроки, ";");
		
		МассивДляВыгрузки.Добавить(ДанныеСтроки);
	КонецЦикла;
	
	возврат МассивДляВыгрузки;
	
КонецФункции

&НаКлиенте
Процедура КаталогНачалоВыбора(Элемент, ДанныеВыбора, ВыборДобавлением, СтандартнаяОбработка)
	
	ВыбратьКаталог("Выбор каталога для создания базы DBF ", Новый ОписаниеОповещения("ПослеВыбораКаталогаДляВыгрузки", ЭтотОбъект));
	
КонецПроцедуры  

&НаКлиенте
Процедура ВыбратьКаталог(ЗаголовокДиалога, Оповещение)
	
	Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);
	Диалог.Заголовок = ЗаголовокДиалога;
	Диалог.Показать(Оповещение);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеВыбораКаталогаДляВыгрузки(ВыбранныеФайлы, Параметры) Экспорт
	
	Если ВыбранныеФайлы = Неопределено Тогда
		Возврат;
	КонецЕсли;
	Каталог = ВыбранныеФайлы[0] + "/";
	
КонецПроцедуры 

&НаКлиенте
Процедура СоздатьБазуDBF(Команда)
	//Тип создаваемого поля: "N" - число, "S" - строка, "D" - дата, "L" - булево, "F" - аналогично "N" - число
	
	БазаДанныхDBF = Новый XBase; //1
	
	БазаДанныхDBF.Поля.Добавить("employee", "S", 50);
	
	БазаДанныхDBF.Поля.Добавить("amount", "N", 10, 2);
	
	БазаДанныхDBF.Поля.Добавить("payment", "L");
	
	БазаДанныхDBF.Поля.Добавить("date", "D");
	
	БазаДанныхDBF.СоздатьФайл(Каталог + "db.dbf"); //2
	
	БазаДанныхDBF.АвтоСохранение = Истина; //3
	
	ДанныеДляВыгрузки = ПолучитьДанныеОРеализацияхЗаДатуЦеликом(); //4
	
	Для ТекущаяСтрока = 0 По ДанныеДляВыгрузки.Количество() - 1 Цикл //5
		
		ТекущиеДанные = СтрРазделить(ДанныеДляВыгрузки[ТекущаяСтрока], ";");
		
		БазаДанныхDBF.Добавить();
		
		БазаДанныхDBF.employee = ТекущиеДанные[0];
		
		БазаДанныхDBF.amount  = Число(ТекущиеДанные[1]);
		
		БазаДанныхDBF.payment=  ТекущиеДанные[2];
		
		БазаДанныхDBF.date = ТекущиеДанные[3];
		
	КонецЦикла;
	
	БазаДанныхDBF.ЗакрытьФайл(); //6
	
	ОбщегоНазначенияКлиент.СообщитьПользователю("Выгрузка завершена!");
КонецПроцедуры

&НаКлиенте
Процедура ПрочитатьИзБазыDBF(Команда)
	БазаДанныхDBF = Новый XBase;

БазаДанныхDBF.ОткрытьФайл(Каталог + "db.dbf");

Пока Истина Цикл

    ТекстСообщения = " " +  СокрЛП(БазаДанныхDBF.employee) + ";"+ БазаДанныхDBF.amount
        + ";" +  БазаДанныхDBF.payment + ";" + БазаДанныхDBF.date;
    ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения);
    Если Не БазаДанныхDBF.Следующая() Тогда
        Прервать;
    КонецЕсли;
КонецЦикла;
БазаДанныхDBF.ЗакрытьФайл();
КонецПроцедуры


