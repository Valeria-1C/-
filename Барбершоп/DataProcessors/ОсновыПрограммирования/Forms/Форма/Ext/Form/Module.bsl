
&НаКлиенте
Процедура РаботаСКоллекциямиЗначений(Команда)
Массив = Новый Массив();

Массив.Добавить(1);
Массив.Добавить("Два");

ВложенныйМассив = Новый Массив();
ВложенныйМассив.Добавить('2003,07,10');

Массив.Добавить(ВложенныйМассив);

Сообщить(Массив[1]);
Сообщить(Массив[2][0]);
КонецПроцедуры

&НаСервере
Процедура РаботаСоСпискомЗначенийНаСервере()
	ТаблицаЗначений = Новый ТаблицаЗначений();
	ТаблицаЗначений.Колонки.Добавить("Представление");
	ТаблицаЗначений.Колонки.Добавить("Значение");
	
	НоваяСтрокаТаблицы = ТаблицаЗначений.Добавить();
	НоваяСтрокаТаблицы.Представление = "Первая строка";
	НоваяСтрокаТаблицы.Значение = "1";
	НоваяСтрокаТаблицы = ТаблицаЗначений.Добавить();
	НоваяСтрокаТаблицы.Представление = "Вторая строка";
	НоваяСтрокаТаблицы.Значение = "2";
	
	Сообщить(ТаблицаЗначений.Количество());
	
	ВыгруженнаяКолонка =   ТаблицаЗначений.ВыгрузитьКолонку("Значение");
	Сообщить(ТипЗнч(ВыгруженнаяКолонка));
	ТаблицаЗначений.Удалить(НоваяСтрокаТаблицы);
	Сообщить(ТаблицаЗначений.Количество());  
	Сообщить(ТаблицаЗначений[0].Представление);
КонецПроцедуры

&НаКлиенте
Процедура РаботаСоСпискомЗначений(Команда)
	РаботаСоСпискомЗначенийНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура РаботаСоСтруктурамиИСоответствиями(Команда)
	МассивСтруктур = Новый Массив;	
	СтруктураПервая = Новый Структура("Представление, Значение", "Первая строка", "1");	
	СтруктураВторая = Новый Структура("Представление, Значение", "Вторая строка", "2");	
	МассивСтруктур.Добавить(СтруктураПервая);	
	МассивСтруктур.Добавить(СтруктураВторая);	
	Сообщить(МассивСтруктур[0].Представление);
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура РаботаСПроцедурамиИФункциямиНаСервере()


КонецПроцедуры

&НаКлиенте
Процедура РаботаСПроцедурамиИФункциями(Команда)
	а = 2;  //1
	
	б = 4;
	
	РезультатФункции = СложитьДваЧислаФункция(а,б); //2
	
	Сообщить(РезультатФункции);
	
	РезультатПроцедуры = 0;   //3
	
	СложитьДваЧислаПроцедура(а,б, РезультатПроцедуры);
	
	Сообщить(РезультатПроцедуры);
	
	РезультатФункцииБезВозвратаЗначений = 0; //4
	
	СложитьДваЧислаФункцияБезВозвратаЗначения(а,б,     РезультатФункцииБезВозвратаЗначений);
	
	Сообщить(РезультатФункцииБезВозвратаЗначений); 
	
КонецПроцедуры

&НаКлиенте
Процедура ВводПоложительногоЧисла(Команда)	
	ПоказатьВводЧислаПользователя("Введите положительное число!");	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьВводЧислаПользователя(ТекстПодсказки)
	
	ОбработкаВводаПользователя = Новый ОписаниеОповещения("ПоказатьВводЧислаЗавершение", ЭтотОбъект);
	
	ПоказатьВводЧисла(ОбработкаВводаПользователя, 0, ТекстПодсказки);  
	
			
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьВводЧислаЗавершение(ВведенноеЧисло, Параметры)
	Экспорт
	
	Если ВведенноеЧисло <>Неопределено И ВведенноеЧисло > 0 Тогда
		
		Сообщить("Вы молодец!");
			
	ИначеЕсли ВведенноеЧисло = 0 Тогда
		
		ПоказатьВводЧислаПользователя("Вы ввели 0, повторите попытку!"); 
		
				
	Иначе
		
		ПоказатьВводЧислаПользователя("Вы ввели отрицательное число, повторите попытку!");
		
	КонецЕсли;
	
КонецПроцедуры 



&НаСервере
Процедура ПосмотретьСтруктуруХраненияТаблицСУБДНаСервере()
	МассивИменМетаданных = Новый Массив();
	МассивИменМетаданных.Добавить("РегистрНакопления.ТоварыНаСкладах");  
	
	МассивИменМетаданных.Добавить("РегистрНакопления.ЗаказКлиентов");
	МассивИменМетаданных.Добавить("РегистрНакопления.Продажи");
	
	СтруктураХранения = ПолучитьСтруктуруХраненияБазыДанных(МассивИменМетаданных);    
	Для Каждого СтрокаДанных Из СтруктураХранения Цикл
		ТекстСообщения = СтрШаблон("Имя таблицы в СУБД: %1, имя объекта в 1С: %2, назначение: %3", СтрокаДанных.ИмяТаблицыХранения, СтрокаДанных.Метаданные, СтрокаДанных.Назначение);
		Сообщить(ТекстСообщения);    
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ПосмотретьСтруктуруХраненияТаблицСУБД1(Команда)
	ПосмотретьСтруктуруХраненияТаблицСУБДНаСервере();
КонецПроцедуры


&НаСервере
Процедура ОбходГруппировокЗапросаНаСервере()
	 	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЗаписьКлиентаУслуги.Номенклатура КАК Номенклатура,
		|	ЗаписьКлиентаУслуги.Количество КАК Количество,
		|	ЗаписьКлиентаУслуги.Сумма КАК Сумма,
		|	ЗаписьКлиента.Сотрудники КАК Сотрудники,
		|	ЗаписьКлиента.Клиент КАК Клиент
		|ИЗ
		|	Документ.ЗаписьКлиента.Услуги КАК ЗаписьКлиентаУслуги
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаписьКлиента КАК ЗаписьКлиента
		|		ПО ЗаписьКлиентаУслуги.Ссылка = ЗаписьКлиента.Ссылка
		|ГДЕ
		|	ЗаписьКлиента.Проведен
		|ИТОГИ
		|	СУММА(Количество),
		|	СУММА(Сумма)
		|ПО
		|	ОБЩИЕ,
		|	Клиент";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаОбщийИтог = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ВыборкаОбщийИтог.Следующий();		// Общий итог 
	
	Сообщить(СтрШаблон("Это общая группировка с суммой %1 и количеством %2", ВыборкаОбщийИтог.Сумма, ВыборкаОбщийИтог.Количество));
		
	ВыборкаКлиент = ВыборкаОбщийИтог.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаКлиент.Следующий() Цикл
		Сообщить(СтрШаблон("Это группировка по клиентам с суммой %1 и количеством %2", ВыборкаКлиент.Сумма, ВыборкаКлиент.Количество));
		
		ВыборкаДетальныеЗаписи = ВыборкаКлиент.Выбрать();
	
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			Сообщить(СтрШаблон("Это детальные записи по номенклатуре %1 с суммой %2 и количеством %3", ВыборкаДетальныеЗаписи.Номенклатура, ВыборкаДетальныеЗаписи.Сумма, ВыборкаДетальныеЗаписи.Количество));
			
		КонецЦикла;
	КонецЦикла;
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

КонецПроцедуры


&НаКлиенте
Процедура ОбходГруппировокЗапроса(Команда)
	ОбходГруппировокЗапросаНаСервере();
КонецПроцедуры

