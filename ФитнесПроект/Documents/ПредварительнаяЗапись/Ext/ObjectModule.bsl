Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	ДлительностьУслуги = РасчитатьДатаОкончанияЗаписи();
	
	Если ДлительностьУслуги = 0 Тогда
		ДлительностьУслуги = 60 ;
	КонецЕсли;
	
	ДатаОкончанияЗаписи = ДатаЗаписи + ДлительностьУслуги*60; 
	
	Если ЗначениеЗаполнено(Ссылка) И УслугаОказана = Ложь Тогда
		УслугаОказана = Документы.ПредварительнаяЗапись.ПроверитьОказаниеУслуг(Ссылка);
	КонецЕсли;
	
	
КонецПроцедуры

Функция РасчитатьДатаОкончанияЗаписи()
	
	ТЧУслуги = Услуги.Выгрузить(,"Услуга");
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТЧУслуги", ТЧУслуги);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТЧУслуги.Услуга КАК Услуга
	|ПОМЕСТИТЬ ВТ_Услуга
	|ИЗ
	|	&ТЧУслуги КАК ТЧУслуги
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(Ном.ДлительностьУслуги) КАК ДлительностьУслуги
	|ИЗ
	|	ВТ_Услуга КАК ВТ_Услуга
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК Ном
	|		ПО ВТ_Услуга.Услуга = Ном.Ссылка";
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат 0;
	КонецЕсли;
	
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	Возврат Выборка.ДлительностьУслуги;
	
КонецФункции

Процедура ОбработкаПроведения(Отказ, Режим)
	
	Движения.ЗаказыКлиентов.Записывать = Истина;
	Движение = Движения.ЗаказыКлиентов.Добавить();
	Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
	Движение.Период = Дата;
	Движение.Клиент = Клиент;
	движение.ЗаказКлиента = Ссылка.Ссылка;
	Движение.Сумма = Услуги.Итог("Сумма") + Абонементы.Итог("Стоимость");

	КонецПроцедуры
